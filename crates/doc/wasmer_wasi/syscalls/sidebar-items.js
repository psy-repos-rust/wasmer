window.SIDEBAR_ITEMS = {"enum":[["Addressfamily",""],["Advice","File or memory access pattern advisory information."],["BusErrno",""],["Clockid","Identifiers for clocks."],["Cow","A clone-on-write smart pointer."],["Entry","A view into a single entry in a map, which may either be vacant or occupied."],["Errno","Error codes returned by functions. Not all of these error codes are returned by the functions provided by this API; some are used in higher-level library layers, and others are provided merely for alignment with POSIX."],["Eventtype","Type of a subscription to an event or its occurrence."],["Extern","An `Extern` is the runtime representation of an entity that can be imported or exported."],["Filetype","The type of a file descriptor or file."],["FsError","Error type for external users"],["Infallible","The error type for errors that can never happen."],["IpAddr","An IP address, either IPv4 or IPv6."],["MemoryAccessError","Error for invalid [`Memory`] access."],["MemoryError","Error type describing things that can go wrong when operating on Wasm Memories."],["OnCalledAction","After the stack is unwound via asyncify what should the call loop do next"],["Ordering","Atomic memory orderings"],["Poll","Indicates whether a value is available or if the current task has been scheduled to receive a wakeup instead."],["Snapshot0Clockid","Identifiers for clocks, snapshot0 version."],["SocketAddr","An internet socket address, either IPv4 or IPv6."],["Sockoption",""],["Sockstatus",""],["Socktype",""],["StreamSecurity",""],["Streamsecurity",""],["Value","WebAssembly computations manipulate values of basic value types:"],["WasiStdioMode",""],["Whence",""]],"fn":[["__asyncify","Asyncify takes the current thread and blocks on the async runtime associated with it thus allowed for asynchronous operations to execute. It has built in functionality to (optionally) timeout the IO, force exit the process, callback signals and pump synchronous IO engine"],["__asyncify_light","Asyncify takes the current thread and blocks on the async runtime associated with it thus allowed for asynchronous operations to execute. It has built in functionality to (optionally) timeout the IO, force exit the process, callback signals and pump synchronous IO engine"],["__sock_actor","Performs an immutable operation on the socket while running in an asynchronous runtime This has built in signal support"],["__sock_actor_mut","Performs mutable work on a socket under an asynchronous runtime with built in signal processing"],["__sock_asyncify","Performs an immutable operation on the socket while running in an asynchronous runtime This has built in signal support"],["__sock_asyncify_mut","Performs mutable work on a socket under an asynchronous runtime with built in signal processing"],["__sock_upgrade","Replaces a socket with another socket in under an asynchronous runtime. This is used for opening sockets or connecting sockets which changes the fundamental state of the socket to another state machine"],["_prepare_wasi",""],["conv_bus_err_to_exit_code",""],["copy_from_slice",""],["copy_to_slice",""],["from_offset",""],["get_current_time_in_nanos",""],["get_memory_stack",""],["get_memory_stack_offset",""],["get_memory_stack_pointer",""],["get_stack_base",""],["get_stack_start",""],["handle_rewind",""],["read_bytes",""],["rewind",""],["set_memory_stack",""],["set_memory_stack_offset",""],["stderr_write","Writes data to the stderr"],["to_offset",""],["transmute","Reinterprets the bits of a value of one type as another type."],["unwind",""],["write_buffer_array",""],["write_bytes",""],["write_bytes_inner",""]],"macro":[["debug","Constructs an event at the debug level."],["error","Constructs an event at the error level."],["trace","Constructs an event at the trace level."],["warn","Constructs an event at the warn level."]],"mod":[["io","Traits, helpers, and type definitions for core I/O functionality."],["legacy","These modules provide wrappers and implementations for older version of WASI."],["mpsc","Multi-producer, single-consumer FIFO queue communication primitives."],["types",""],["unix",""],["wasi",""],["wasix",""]],"struct":[["Arc","A thread-safe reference-counting pointer. ‘Arc’ stands for ‘Atomically Reference Counted’."],["AtomicBool","A boolean type which can be safely shared between threads."],["AtomicU32","An integer type which can be safely shared between threads."],["AtomicU64","An integer type which can be safely shared between threads."],["BusHandles",""],["Bytes","A cheaply cloneable and sliceable chunk of contiguous memory."],["BytesMut","A unique reference to a contiguous slice of memory."],["Condvar","A Condition Variable"],["Context","The `Context` of an asynchronous task."],["Dirent","A directory entry."],["DuplexPipe","A pair of pipes that are connected together."],["Duration","A `Duration` type to represent a span of time, typically used for system timeouts."],["Event","An event that occurred."],["EventFdReadwrite","The contents of an `event` for the `eventtype::fd_read` and `eventtype::fd_write` variants"],["Eventrwflags","The state of the file descriptor subscribed to with `eventtype::fd_read` or `eventtype::fd_write`."],["Fdflags","File descriptor flags."],["Fdstat","File descriptor attributes."],["Filestat",""],["Fstflags","Which file time attributes to adjust. TODO: wit appears to not have support for flags repr (@witx repr u16)"],["Function","A WebAssembly `function` instance."],["FunctionEnv","An opaque reference to a function environment. The function environment data is owned by the `Store`."],["FunctionEnvMut","A temporary handle to a [`FunctionEnv`]."],["Global","A WebAssembly `global` instance."],["HashMap","A hash map implemented with quadratic probing and SIMD lookup."],["HashSet","A hash set implemented as a `HashMap` where the value is `()`."],["InfiniteSleep",""],["Instance","A WebAssembly Instance is a stateful, executable instance of a WebAssembly [`Module`]."],["Ipv4Addr","An IPv4 address."],["Ipv6Addr","An IPv6 address."],["LocalKey","A thread local storage key which owns its contents."],["Memory","A WebAssembly `memory` instance."],["Memory32","Marker trait for 32-bit memories."],["Memory64","Marker trait for 64-bit memories."],["MemoryView","A WebAssembly `memory` view."],["Module","A WebAssembly Module contains stateless WebAssembly code that has already been compiled and can be instantiated multiple times."],["Mutex","A mutual exclusion primitive useful for protecting shared data"],["NonZeroU64","An integer that is known not to equal zero."],["OptionFd",""],["Pages","Units of WebAssembly pages (as specified to be 65,536 bytes)."],["Path","A slice of a path (akin to [`str`])."],["Pin","A pinned pointer."],["Prestat",""],["RefCell","A mutable memory location with dynamically checked borrow rules"],["Rights","File descriptor rights, determining which actions may be performed."],["RuntimeError","A struct representing an aborted instruction execution, with a message indicating the cause."],["StackSnapshot",""],["Store","The store represents all global state that can be manipulated by WebAssembly programs. It consists of the runtime representation of all instances of functions, tables, memories, and globals that have been allocated during the lifetime of the abstract machine."],["Subscription",""],["SubscriptionFsReadwrite","An event that occurred. The contents of an `event`. An event that occurred. The contents of a `subscription`, snapshot0 version. The contents of a `subscription`. The contents of a `subscription` when the variant is `eventtype::fd_read` or `eventtype::fd_write`."],["Tty",""],["TypedFunction","A WebAssembly function that can be called natively (using the Native ABI)."],["WasmPtr","A zero-cost type that represents a pointer to something in Wasm linear memory."],["WasmSlice","Reference to an array of values in Wasm memory."],["__wasi_asyncify_t",""]],"trait":[["AsStoreMut","Helper trait for a value that is convertible to a [`StoreMut`]."],["AsStoreRef","Helper trait for a value that is convertible to a [`StoreRef`]."],["AsyncSeekExt","An extension trait that adds utility methods to `AsyncSeek` types."],["AsyncWriteExt","Writes bytes to a sink."],["Borrow","A trait for borrowing data."],["Deref","Used for immutable dereferencing operations, like `*v`."],["DerefMut","Used for mutable dereferencing operations, like in `*v = 1;`."],["FileSystem",""],["IntoWaker","Objects that can be converted into an `Waker`. This trait is automatically implemented for types that fulfill the waker interface. Such types must be:"],["MemorySize","Trait for the `Memory32` and `Memory64` marker types."],["Read","The `Read` trait allows for reading bytes from a source."],["Seek","The `Seek` trait provides a cursor which can be moved within a stream of bytes."],["TryInto","An attempted conversion that consumes `self`, which may or may not be expensive."],["VirtualFile","This trait relies on your file closing when it goes out of scope via `Drop`"],["Write","A trait for objects which are byte-oriented sinks."]],"type":[["Bid",""],["Cid",""],["Dircookie","A reference to the offset of a directory entry."],["ExitCode",""],["Filesize","Non-negative file size or length of a region within a file."],["Linkcount",""],["Longsize","Long size used by checkpoints"],["Pid",""],["Sha256","SHA-256 hasher."],["Tid",""],["Timestamp","Timestamp in nanoseconds."],["TlKey","Thread local key"],["TlUser","Thread local user data (associated with the value)"],["TlVal","Thread local value"],["WasiFd","A file descriptor handle."]],"union":[["EventUnion","The contents of an `event`."]]};